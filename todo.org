* TODO Make a branch where remove completely the use of the parent/children stuff and just do intentation
** TODO [#A] make a stack of parent headers, then for each header in the array, compare with the stack, then add/remove from the stack or make child of top element of the stack
* TODO Fix the logic for the determination of when headers change indentation
* DONE make a debug print of the header tree
* TODO Be able to move Headers up and down
* TODO Fold Headers
* TODO toggle todo/done on headers
* TODO Headers with multiline
* TODO experiment with linkled lists in another branch (will this make the code easier?)
* TODO Be able to put tags on headers
* TODO save state to file [1/3]
** DONE Can save
** TODO choose file to open
** TODO name file to save
** TODO Have Diffrenent views of the file based on tags generated by the user
** TODO Copy-Paste Cut
** TODO Line wrapping
** TODO Be able to change font size
** TODO Undo/redo
* TODO C-up/ C-down
* TODO Add Tabs [0/2]
** TODO draw tabs correctly
** TODO remove correctly
* TODO Have auto-completion with english words
* DONE When key is held down, make it repeat
What I have tried so far is not working ( it has to do with state between keyboard checks)
* DONE Change the font
* DONE Show cursor
* DONE Write more than just letters
* DONE Put cursor in multi-lines
* DONE Improve alg for repeating key
* DONE write/edit in the middle of line
Will need to do some mem.copy stuff etc, look a tsoding ded code for insperation
* DONE Refactor
* DONE Move cursor up/down
* DONE fixed error when moving down a line at the end
* DONE Fixed multiline cursor postion (no more offset) (Cheat)
* DONE start/end of line with C-a/C-e
* DONE delete key and C-d
* DONE Have multiple headers 
* DONE pool of headers, (fewer mallocs to do that way)
* DONE can "delete" headers
* DONE Move between headers
* DONE separate the execute command proc from the main proc
* DONE delete words with C-backspace
* DONE make hierarchical headers
* DONE Make a reproducible test case to make debugging easier and faster

